# Writes a toml file with the git version and commits
# to the repository. 
# NOTE: The commit hash will be point to the repository
#       *before* the auto-commit action (but the same code). 
name: AutoGitVersionFile

on: 
  push:
    branches:
      - main
      - 'production/**'

jobs:

  add-version-files:
  
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write

    steps:
    
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: "Add Software Version"
        run: |
           export SOFTWARE_VERSION=$(grep -r "version" pyproject.toml | cut -d' ' -f3)
           echo "# Do not edit this file (written by github autoversion action)" > src/pysiral/software-version.toml
           echo "SOFTWARE_VERSION=${SOFTWARE_VERSION}" >> src/pysiral/software-version.toml

      - name: "Add Git Version"
        run: |
          export ORIGIN=$(git config --get remote.origin.url)
          export BRANCH_NAME=$(git branch --show-current)
          export COMMIT_HASH=$(git log -1 --format=%H)
          echo "# Do not edit this file (written by github autoversion action)" > src/pysiral/git-version.toml
          echo "BRANCH = \"${BRANCH_NAME}\"" >> src/pysiral/git-version.toml
          echo "COMMIT = \"${COMMIT_HASH}\"" >> src/pysiral/git-version.toml
          echo "ORIGIN = \"${ORIGIN}\"" >> src/pysiral/git-version.toml

      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v6
        id: auto-commit-action #mandatory for the output to show up in ${{ steps }}
        with:
            commit_message: Auto-Version Update (via Github workflow autoversion.yml)
